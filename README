+----------+
| Building | 
+----------+

You need a few prerequisites (shared library versions):

    lua, lua-devel 
	A LUA parser is used to parse the config file.

    munge, munge-libs, munge-devel
	Needed if --enable-munge (see below).

    tcp_wrappers, tcp_wrappers-libs, tcp_wrappers-devel
	Needed if you want built-in TCP wrapper functionality.

configure options:

    --enable-munge
	Build with MUNGE support.  Currrently this is the only
	supported authentication method.  If you don't enable
	munge, you will have to run the server with --no-auth
	which is likely a big security vulnerability.

+---------+
| Testing |
+---------+

Unit tests (make check):

    ./test
	Miscellaneous unit tests.
	Some tests will be skipped if not root.

    ./testuser
	User space client and server running across a socketpair.
	All tests should always run.

    ./testkern:
	Mount kernel client and user server locally, once per test.
	You will need a 9p.ko that speaks 9P2000.L, e.g. kernel 2.6.38+.
	All tests require root and 9p.ko.

Running by hand:

    Starting diod server with one export, no auth required,
    with protocol debugging enabled:
	sudo ./diod -l 192.168.50.135:550 -d 1 -n -e /tmp/9 

    Mounting:
	sudo ./diodmount -p 550 -n 192.168.50.135:/tmp/9 /mnt
