.TH 9p-version 5 "@META_DATE@" "@META_ALIAS@" "@META_NAME@"
.SH NAME
9p version \- negotiate protocol version
.SH SYNOPSIS
.nf
size[4] Tversion tag[2] msize[4] version[s]
size[4] Rversion tag[2] msize[4] version[s]
.fi
.SH DESCRIPTION
The version request negotiates the protocol version and message size to be used on the connection and initializes the connection for I/O. Tversion must be the first message sent on the 9P connection, and the client cannot issue any further requests until it has received the Rversion reply. The tag should be NOTAG (value (ushort)~0) for a version message.
.LP
The client suggests a maximum message size, msize, that is the maximum length, in bytes, it will ever generate or expect to receive in a single 9P message. This count includes all 9P protocol data, starting from the size field and extending through the message, but excludes enveloping transport protocols. The server responds with its own maximum, msize, which must be less than or equal to the client's value. Thenceforth, both sides of the connection must honor this limit.
.LP
The version string identifies the level of the protocol. The string must always begin with the two characters ``9P''. If the server does not understand the client's version string, it should respond with an Rversion message (not Rerror) with the version string the 7 characters ``unknown''.
.LP
The server may respond with the client's version string, or a version string identifying an earlier defined protocol version. Currently, the only defined version is the 6 characters ``9P2000''. Version strings are defined such that, if the client string contains one or more period characters, the initial substring up to but not including any single period in the version string defines a version of the protocol. After stripping any such periodâ€“separated suffix, the server is allowed to respond with a string of the form 9Pnnnn, where nnnn is less than or equal to the digits sent by the client.
.LP
The client and server will use the protocol version defined by the server's response for all subsequent communication on the connection.
.LP
A successful version request initializes the connection. All outstanding I/O on the connection is aborted; all active fids are freed (`clunked') automatically. The set of messages between version requests is called a session.
.SH "UNIX EXTENSIONS"
Extracted from [rfc9p2000.u]:
.LP
Support for 9P2000.u is an optional extension which isn't quite covered in
the existing version semantics for 9P2000.  The original protocol
specification describes discarding anything after an initial period in
the version string.  We use the information following the period as a
method for negotiating optional protocol extensions.
.LP
If a client desires support for the UNIX extensions, it will add a .u
to the end of the version string (e.g. 9P2000.u).  If a server is
capable of supporting the extension, it will return 9P2000.u back to the
client.  If the server is incapable or unwilling to support the extensions,
it will return the version string without the extension specification
(e.g. 9P2000).
.LP
Clients should be implemented in such a way to be able to operate without
the extensions in some degraded form of operation.  Specifics for how to
gracefully degrade operation without specific extensions are suggested by
[rfc9p2000.u].
.SH "DIOD EXTENSIONS"
The \fBdiod\fR extensions are negotiated as above only the version string is
9P2000.h.  9P2000.h implies the UNIX extensions as well.
.SH "LINUX ENTRY POINTS"
tbd
.SH "PLAN9 ENTRY POINTS"
The version message is generated by the fversion system call. It is also generated automatically, if required, by a mount or fauth system call on an uninitialized connection.
.SH ORIGIN
The Plan 9 operating system, fourth edition, 2002.
.br
Copyright (c) 2010 Lucent Technologies. All rights reserved.
.SH "SEE ALSO"
[plan9] http://plan9.bell-labs.com/sys/man/index.html
.LP
[graverobbers] ``Grave Robbers from Outer Space: Using 9P2000 Under Linux'',
Eric Van Hensbergen and Ron Minnich, 2005.
.LP
[rfc9p2000.h] http://ericvh.github.com/9p-rfc/rfc9p2000.u.html
.LP
9p-intro(5)
